---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: infobloxippools.ipam.cluster.x-k8s.io
spec:
  group: ipam.cluster.x-k8s.io
  names:
    kind: InfobloxIPPool
    listKind: InfobloxIPPoolList
    plural: infobloxippools
    singular: infobloxippool
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Default network view
      jsonPath: .spec.networkView
      name: Network view
      type: string
    - description: Subnets to allocate IPs from
      jsonPath: .spec.subnets
      name: Subnets
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: InfobloxIPPool is the Schema for the InfobloxIPPools API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: InfobloxIPPoolSpec defines the desired state of InfobloxIPPool.
            properties:
              dnsView:
                description: DNSView defines Infoblox DNS view to be used with pool.
                type: string
              dnsZone:
                description: DNSZone is the DNS zone within which hostnames will be
                  allocated.
                type: string
              instance:
                description: Instance is the Infoblox instance to use.
                properties:
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              networkView:
                description: NetworkView defines Infoblox netwok view to be used with
                  pool.
                type: string
              subnets:
                description: |-
                  Subnets is the subnet to assign IP addresses from.
                  Can be omitted if addresses or first, last and prefix are set.
                items:
                  description: Subnet defines the CIDR and Gateway.
                  properties:
                    cidr:
                      description: CIDR for the subnet.
                      type: string
                    gateway:
                      description: Gateway for the subnet.
                      type: string
                  required:
                  - cidr
                  type: object
                type: array
            required:
            - instance
            - subnets
            type: object
          status:
            description: InfobloxIPPoolStatus defines the observed state of InfobloxIPPool.
            properties:
              conditions:
                description: Conditions provide observations of the operational state
                  of a Cluster API resource.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A human readable message indicating details about the transition.
                        This field may be empty.
                      type: string
                    reason:
                      description: |-
                        The reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may be empty.
                      type: string
                    severity:
                      description: |-
                        severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
